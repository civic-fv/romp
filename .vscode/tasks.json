{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "cmake",
            "label": "CMake: build romp",
            "detail": "use CMake to build the romp codegen tool",
            "command": "build",
            "targets": [
                "romp"
            ],
            "group": "build",
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "cmake",
            "label": "CMake: configure romp",
            "detail": "use CMake to configure the romp codegen tool for building",
            "command": "configure",
            "targets": [
                "romp"
            ],
            "group": "build",
            "problemMatcher": [],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "make: build romp",
            "detail": "use make to build the romp tool (must have configured cmake first & built/have librumur)",
            "group": "build",
            "command": "make",
            "args": [
                "romp"
            ],
            "dependsOn": [
                "CMake: configure romp",
                "cd: build/romp"
            ],
            "dependsOrder": "sequence",
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "cd: build/romp",
            "detail": "cd to the romp build dir",
            "group": "build",
            "command": "cd",
            "args": [
                "${workspaceFolder}/build/romp"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "romp: generate german test",
            "detail": "use make to build the romp tool (must have configured cmake first & built/have librumur)",
            "group": "build",
            "command": "${workspaceFolder}/build/romp/romp",
            "args": [
                "--do-measure",
                "--simple-trace",
                "--output",
                "${workspaceFolder}/romp/tests/german.m.test.cpp",
                "${workspaceFolder}/romp/tests/german.m"
            ],
            "dependsOn": [
                "CMake: build romp"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "build german test",
            "detail": "use make to build the romp tool (must have configured cmake first & built/have librumur)",
            "group": "build",
            "command": "g++",
            "args": [
                "-g",
                "-pthread",
                "-o",
                "${workspaceFolder}/romp/tests/german.m.test",
                "${workspaceFolder}/romp/tests/german.m.test.cpp"
            ],
            "dependsOn": [
                "romp: generate german test"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "romp: generate german test [no-build]",
            "detail": "use make to build the romp tool (must have configured cmake first & built/have librumur)",
            "group": "build",
            "command": "${workspaceFolder}/build/romp/romp",
            "args": [
                "--do-measure",
                // "--simple-trace",
                "--output",
                "${workspaceFolder}/romp/tests/german.m.test.cpp",
                "${workspaceFolder}/romp/tests/german.m"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "shell",
            "label": "build german test [no-build]",
            "detail": "use make to build the romp tool (must have configured cmake first & built/have librumur)",
            "group": "build",
            "command": "g++",
            "args": [
                "-g",
                "-pthread",
                "-o",
                "${workspaceFolder}/romp/tests/german.m.test",
                "${workspaceFolder}/romp/tests/german.m.test.cpp"
            ],
            "dependsOn": [
                "romp: generate german test [no-build]"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "romp: gen active file",
            "command": "${workspaceFolder}/build/romp/romp",
            "args": [
                "-lca",
                "--do-measure",
                "--simple-trace",
                "--output",
                "${file}.test.cpp",
                "${file}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "C/C++: g++ build active murphi file [romp]",
            "command": "/usr/bin/g++",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "-pthread",
                "-D_ROMP_RULE_SELECTION_ALGO=2",
                "${file}.test.cpp",
                "-o",
                "${file}.test"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "romp: gen active file"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "rumur: gen active file",
            "command": "${workspaceFolder}/build/rumur/rumur",
            "args": [
                "--smt-path",
                "z3",
                "--smt-arg=-smt2",
                "--smt-arg=-in",
                "--smt-arg=-t:5000",
                "--smt-budge=100000",
                "--output",
                "${file}.test.c",
                "${file}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "C: gcc build active murphi file [rumur]",
            "command": "/usr/bin/gcc",
            "args": [
                "-fdiagnostics-color=always",
                "-O3",
                "-march=native",
                "-pthread",
                "${file}.test.c",
                "-o",
                "${file}.test"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "rumur: gen active file"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "rumur: gen active file [exhaustive]",
            "command": "${workspaceFolder}/build/rumur/rumur",
            "args": [
                "--symmetry-reduction",
                "exhaustive",
                "--smt-path",
                "z3",
                "--smt-arg=-smt2",
                "--smt-arg=-in",
                "--smt-arg=-t:5000",
                "--smt-budge=100000",
                "--output",
                "${file}.test.c",
                "${file}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "presentation": {
                "clear": true
            }
        },
        {
            "label": "C: gcc build active murphi file [rumur,exhaustive]",
            "command": "/usr/bin/gcc",
            "args": [
                "-fdiagnostics-color=always",
                "-O3",
                "-march=native",
                "-pthread",
                "${file}.test.c",
                "-o",
                "${file}.test"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "dependsOn": [
                "rumur: gen active file"
            ],
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "cppbuild",
            "label": "C/C++: g++ build active C++ file [algo:2]",
            "command": "/usr/bin/g++",
            "args": [
                "-fdiagnostics-color=always",
                "-g",
                "-pthread",
                "-D_ROMP_RULE_SELECTION_ALGO=2",
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "Task generated by Debugger.",
            "presentation": {
                "clear": true
            }
        },
        {
            "type": "cppbuild",
            "label": "C/C++: clang++ build active file",
            "command": "/usr/bin/clang++",
            "args": [
                "-fcolor-diagnostics",
                "-fansi-escape-codes",
                "-g",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}",
                "${file}"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        }
    ]
}